version: '3.9'

services:
  db:
    image: postgres:15
    container_name: db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: chat_db
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  auth-api:
    build: ./auth-api
    container_name: auth-api
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:80"
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 10s
      timeout: 5s
      retries: 5

  receive-send-api:
    build: ./receive-send-api
    container_name: receive-send-api
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "3000:3000"
    restart: unless-stopped
    

  record-api:
    build: ./record-api
    container_name: record-api
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5001:5001"
    restart: unless-stopped
    command: ["gunicorn", "--bind", "0.0.0.0:5001", "app:app"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
